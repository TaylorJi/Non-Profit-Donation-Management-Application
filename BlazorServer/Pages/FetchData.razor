@* @page "/fetchdata"
@using BlazorServer.Data
@inject WeatherForecastService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
<p><em>Loading...</em></p>
}
else
{
<table class="table">
<thead>
<tr>
<th>Date</th>
<th>Temp. (C)</th>
<th>Temp. (F)</th>
<th>Summary</th>
</tr>
</thead>
<tbody>
@foreach (var forecast in forecasts)
{
<tr>
<td>@forecast.Date.ToShortDateString()</td>
<td>@forecast.TemperatureC</td>
<td>@forecast.TemperatureF</td>
<td>@forecast.Summary</td>
</tr>
}
</tbody>
</table>
}

@code {
private WeatherForecast[]? forecasts;

protected override async Task OnInitializedAsync()
{
forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
}
} *@


@page "/contactList"
@using BlazorServer.Data
@using DonationLibrary.Models
@inject ContactListService contactService

<h1>Contact List</h1>

@if (contactLists == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table table-hover'>
    <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Street</th>
            <th>City</th>
            <th>Postal Code</th>
            <th>Country</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in contactLists)
            {
                <tr>
                    <td>@item.AccountNo</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Email</td>
                    <td>@item.Street</td>
                    <td>@item.City</td>
                    <td>@item.PostalCode</td>
                    <td>@item.Country</td>
                    <td><a class="btn btn-success btn-sm" href="/contactList/updel/@item.AccountNo/edit">edit</a></td>
                    <td><a class="btn btn-danger btn-sm" href="/contactList/updel/@item.AccountNo/del">del</a></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<ContactList>? contactLists;

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        contactLists = await contactService.GetContactListsAsync();
    }
}
